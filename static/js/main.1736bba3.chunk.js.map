{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Chart","isDark","useQuery","refetchInterval","isLoading","data","type","series","map","price","x","time_open","y","open","high","low","close","options","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","PriceInfo","styled","div","Info","props","theme","accentColor","Price","slice","reverse","market_cap","time_close","volume","Title","h1","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Back","button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","name","to","rank","symbol","quotes","USD","toFixed","description","total_supply","max_supply","path","CoinsList","ul","li","cardBgColor","Img","img","Toggle","selected","Circle","Coins","toggleDark","useState","isSelected","onClick","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","setIsDark","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.1736bba3.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n  isDark: boolean;\n}\nfunction Chart({ coinId, isDark }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return {\n                  x: new Date(price.time_open),\n                  y: [price.open, price.high, price.low, price.close],\n                };\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n            },\n            title: {\n              text: \"CandleStick Chart\",\n              align: \"left\",\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface PriceProps {\n  coinId: string;\n}\n\nconst PriceInfo = styled.div`\n  font-size: 30px;\n`;\n\nconst Info = styled.div`\n  font-size: 20px;\n  border: 1px solid black;\n  border-color: ${(props) => props.theme.accentColor};\n  margin: 10px 0;\n  padding: 20px;\n`;\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading price...\"\n      ) : (\n        <PriceInfo>\n          {coinId} Infomation\n          {data\n            ?.slice(0)\n            .reverse()\n            .map((price) => (\n              <Info key={price.time_open}>\n                <div>open: {price.open}</div>\n                <div>close: {price.close}</div>\n                <div>low: {price.low}</div>\n                <div>high: {price.high}</div>\n                <div>market cap: {price.market_cap}</div>\n                <div>time close: {price.time_close}</div>\n                <div>time open: {price.time_open}</div>\n                <div>volume: {price.volume}</div>\n              </Info>\n            ))}\n        </PriceInfo>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst Back = styled.button`\n  margin-bottom: 20px;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {\n  isDark: boolean;\n}\n\nfunction Coin({ isDark }: ICoinProps) {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to=\"/\">\n          <Back>Back</Back>\n        </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart isDark={isDark} coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\nconst Toggle = styled.button<CircleProps>`\n  all: unset;\n  display: block;\n  border-radius: 30px;\n  width: 40px;\n  height: 20px;\n  border: 2px solid ${(props) => (props.selected ? \"#48AFF1\" : \"#A3A4A6\")};\n  background-color: ${(props) => (props.selected ? \"#48AFF1\" : \"#A3A4A6\")};\n  margin-bottom: 20px;\n`;\ninterface CircleProps {\n  selected: boolean;\n}\nconst Circle = styled.div<CircleProps>`\n  border-radius: 30px;\n  width: 50%;\n  height: 100%;\n  background-color: white;\n  margin-left: ${(props) => (props.selected ? \"auto\" : \"none\")};\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {\n  toggleDark: () => void;\n}\n\nfunction Coins({ toggleDark }: ICoinsProps) {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  const [selected, isSelected] = useState(false);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Toggle\n          onClick={() => {\n            toggleDark();\n            isSelected(!selected);\n          }}\n          selected={selected}\n        >\n          <Circle selected={selected}></Circle>\n        </Toggle>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {\n  toggleDark: () => void;\n  isDark: boolean;\n}\n\nfunction Router({ toggleDark, isDark }: IRouterProps) {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin isDark={isDark} />\n        </Route>\n        <Route path=\"/\">\n          <Coins toggleDark={toggleDark} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router isDark={isDark} toggleDark={toggleDark} />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}